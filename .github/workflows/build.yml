name: Build & Release
env:
  DEBUG: napi:*
  APP_NAME: steamworks-ts
  MACOSX_DEPLOYMENT_TARGET: '10.13'
permissions:
  contents: write
  id-token: write

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
  pull_request:

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: npm run build -- --target x86_64-apple-darwin
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: npm run build -- --target x86_64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: npm run build -- --target x86_64-unknown-linux-gnu
    name: Build & Release - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v4
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 20
          cache: npm

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        if: ${{ !matrix.settings.docker }}
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - name: Install dependencies
        run: npm install

      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}

      - name: Build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error

      # Only run the following steps once, after all matrix builds are done
      - name: Download all artifacts
        if: ${{ matrix.settings.target == 'x86_64-unknown-linux-gnu' }}
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts
        if: ${{ matrix.settings.target == 'x86_64-unknown-linux-gnu' }}
        run: npm run artifacts

      - name: Pack npm package
        if: ${{ matrix.settings.target == 'x86_64-unknown-linux-gnu' }}
        run: npm pack

      - name: Publish to npm
        if: |
          github.ref == 'refs/heads/main' &&
          matrix.settings.target == 'x86_64-unknown-linux-gnu' &&
          (startsWith(github.event.head_commit.message, 'release:') || github.event.head_commit.message =~ '^[0-9]+\\.[0-9]+\\.[0-9]+')
        run: |
          npm config set provenance true
          if echo "${{ github.event.head_commit.message }}" | grep -E "^[0-9]+\.[0-9]+\.[0-9]+$"; then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif echo "${{ github.event.head_commit.message }}" | grep -E "^[0-9]+\.[0-9]+\.[0-9]+"; then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}